####8. The four adjacent digits in the 1111-digit number that have the greatest product are 9 × 9 × 8 × 9 = 5832.
####
####73167176531331624919225119674426574742355349194934
####96983521312774516326239578318116984811869478851843
####85861561789112949495459511737958331952853218815511
####12541698747158523863151715693291963295227443143557
####66896648951445244523161731856413198711121722383113
####62229893423381318135336276614282816444486645238749
####31358917296291491561441772391713811515859317961866
####71172427121883998797918792274921911699721888193776
####65727333111153367881221235421819751254541594752243
####52584917711671556113614839586446716324415722155397
####53697817977846174164955149291862569321978468622482
####83972241375657156157491261417972968652414535111474
####82166371484413199891118895243451658541227588666881
####16427171479924442928231863465674813919123162824586
####17866458359124566529476545682848912883142617691142
####24219122671155626321111119371544217516941658961418
####17198413851962455444362981231987879927244284919188
####84581156166197919133875499211524163689912561717616
####15886116467119415177541112256983155211155935729725
####71636269561882671428252483611823257531421752963451
####
####Find the thirteen adjacent digits in the 1111-digit number that have the greatest product. What is the value of #this product?

num = '7316717653133162491922511967442657474235534919493496983521312774516326239578318116984811869478851843858615617891129494954595117379583319528532188155111254169874715852386315171569329196329522744314355766896648951445244523161731856413198711121722383113622298934233813181353362766142828164444866452387493135891729629149156144177239171381151585931796186671172427121883998797918792274921911699721888193776657273331111533678812212354218197512545415947522435258491771167155611361483958644671632441572215539753697817977846174164955149291862569321978468622482839722413756571561574912614179729686524145351114748216637148441319989111889524345165854122758866688116427171479924442928231863465674813919123162824586178664583591245665294765456828489128831426176911422421912267115562632111111937154421751694165896141817198413851962455444362981231987879927244284919188845811561661979191338754992115241636899125617176161588611646711941517754111225698315521115593572972571636269561882671428252483611823257531421752963451'

arr = num.split(//)

workBuffer = []
storedSum = 1
workingSum = 1

while true do 
    (1..13).each do |n|
        currInt = arr.pop.to_i
        workBuffer.push(currInt)
    end
    workingSum = workBuffer.inject(:*)  
    if workingSum > storedSum
        storedSum = workingSum
    end
    break if arr.length == 0
end

puts storedSum  
