puts '##########################################################'
puts 'euler #1 -  If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.'
puts 'Find the sum of all the multiples of 3 or 5 below 1000.'
puts '##########################################################'
puts 'Find the sum of all the multiples of 3 or 5 below x.'
puts '##########################################################'
puts 'enter a number for x:'
a = gets
puts '##########################################################'

def sumOfNaturalNumbersBelow (n)
    total = 0
    
    (1..n).each do |n| 
        if n % 3 == 0 || n % 5 == 0
            total += n
         end
    end
            
    return total
end

puts 'The sum of all the multiples of 3 or 5 below '+a
puts sumOfNaturalNumbersBelow(a.to_i)
puts '##########################################################'

puts '##########################################################'
puts 'euler #2 -  Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:'
puts '1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...'
puts 'By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.'
puts '##########################################################'
puts 'Find the sum of all even numbers in the Fibonacci sequence below x'
puts '##########################################################'
puts 'enter a number for x:'
a = gets.to_i
puts '##########################################################'

def fibSumsBelow (n)
    last = 1
    current = 2

    total = 0

    while current < n
        x = current + last
        if x % 2 == 0
            total += x
        end
        last = current 
        current = x
    end

    return total
end

puts 'Find the sum of all even numbers in the Fibonacci sequence below '+a.to_s
puts fibSumsBelow(a)
puts '##########################################################'